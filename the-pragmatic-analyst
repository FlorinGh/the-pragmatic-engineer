The pragmatic analyst
*** a list of tips adapted from the Pragmatic Programmer ***

1. Care About Your Craft
Why spend your life doing computational engineering unless you care about doing it well?

2. Think! About Your Work
Turn off the autopilot and take control. Constantly critique and appraise your work.

3. Provide Options. Don't Make Lame Excuses
Instead of excuses, provide options. Don't say it can't be done; explain what can be done.

4. Don't Live with Broken Windows
Fix bad designs, wrong decisions and poor setups when you see them.

5. Be a Catalyst for change
You can't force change on people. Instead, show them how the future might be and help them
participate in creating it.

6. Remember the big picture
Don't get so engrossed in the details that you forget to check what's happening around you.

7. Make quality a requirements issue
Involve your users (manager/client) in determining the project's real quality requirements.

8. Invest regularly in your knowledge portfolio
Make learning a habit.

9. Critically analyse what you read and hear
Don't be sawed by vendors, media hype or dogma; analyse information in terms
of you and your project.

10. It's Both What You Say and the way you say it




***
The cheapest supplier does not become the cheapest solution in the end



